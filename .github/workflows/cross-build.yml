# Instruction + template repo: https://github.com/FedericoPonzi/rust-ci
name: cross-build

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

jobs:
  deploy:
    name: deploy
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          [
            aarch64-unknown-linux-gnu,
            armv7-unknown-linux-gnueabihf,
            i686-unknown-linux-gnu,
            i686-unknown-linux-musl,
            mips-unknown-linux-gnu,
            mips64-unknown-linux-gnuabi64,
            mips64el-unknown-linux-gnuabi64,
            mipsel-unknown-linux-gnu,
            powerpc-unknown-linux-gnu,
            powerpc64-unknown-linux-gnu,
            powerpc64le-unknown-linux-gnu,
            arm-unknown-linux-gnueabi,
            x86_64-unknown-linux-gnu,
            x86_64-unknown-linux-musl,
            aarch64-apple-darwin,
            # x86_64-apple-darwin
          ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Build target
        if: matrix.target != 'aarch64-apple-darwin'
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }} --manifest-path ./build_tool/Cargo.toml

      - name: Build Apple targets
        shell: bash
        run: |
          rustup target add aarch64-apple-darwin
          cargo build --release --target aarch64-apple-darwin --manifest-path ./build_tool/Cargo.toml

      - name: Package
        if: matrix.target == 'aarch64-apple-darwin'
        shell: bash
        run: |
          #strip target/${{ matrix.target }}/release/build_tool     
          tar -czvf ./build_tool-${{ matrix.target }}.tar.gz -C build_tool/target/${{ matrix.target }}/release/ build_tool
      - name: Publish
        uses: softprops/action-gh-release@v1
        # TODO: if any of the build step fails, the release should be deleted.
        with:
          files: "build_tool*.tar.gz"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
